name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Set Environment Variables
        run: |
          echo "REACT_APP_AZURE_AI_FOUNDRY_KEY=${{ secrets.REACT_APP_AZURE_AI_FOUNDRY_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_GPT_ENDPOINT=${{ secrets.REACT_APP_GPT_ENDPOINT }}" >> $GITHUB_ENV
          echo "REACT_APP_TTS_ENDPOINT=${{ secrets.REACT_APP_TTS_ENDPOINT }}" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: npm install
      
      - name: Debug Environment Variables
        run: |
          echo "üîç Checking environment variables during build:"
          echo "REACT_APP_AZURE_AI_FOUNDRY_KEY: ${REACT_APP_AZURE_AI_FOUNDRY_KEY:0:10}..."
          echo "REACT_APP_GPT_ENDPOINT: $REACT_APP_GPT_ENDPOINT"
          echo "REACT_APP_TTS_ENDPOINT: $REACT_APP_TTS_ENDPOINT"
      
      - name: Build
        run: npm run build
      
      - name: Debug Built Files
        run: |
          echo "üîç Checking if environment variables are embedded in built files:"
          if grep -q "REACT_APP_AZURE_AI_FOUNDRY_KEY" build/static/js/*.js; then
            echo "‚úÖ Found environment variable references in built JS files"
            grep -o "REACT_APP_[A-Z_]*" build/static/js/*.js | sort | uniq
          else
            echo "‚ùå No environment variable references found in built JS files"
          fi
      
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_JOLLY_STONE_089110410 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
